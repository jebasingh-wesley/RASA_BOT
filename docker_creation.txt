docker used for ready made package

docker install step:

reference link :-

How To Install Docker on Ubuntu 20.04 

steps:

sudo apt update

sudo apt-get install apt-transport-https ca-certificates curl software-properties-common


curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu  $(lsb_release -cs)  stable"

sudo apt update

sudo apt-get install docker-ce


docker --version
sudo systemctl start docker

sudo systemctl status docker

 

create a Dockerfile


FROM python:3.9 #your version
ADD voice_doc.py . #your python file 
ADD requirements.txt .#your installed packeges
RUN pip install -r requirements.txt # run all libraries
CMD  [ "python", "./voice_doc.py" ] 

RUN apt-get update ##[edited]

with WORKDIR


FROM python:3.9 #your version
WORKDIR /voice  #inside of all files

RUN pip install -r requirements.txt # run all libraries
CMD  [ "python", "./voice_doc.py" ] 

RUN apt-get update ##[edited]

 

Create docker image

docker build -t “imagename “ ..(dot is important)

ex:-

docker build -t voice .

run your docker images

docker run voice

Docker hub Register

go to docker hub official page https://hub.docker.com/  register Now

ex:

id : oasys2022

email : oasys@gmail.com

password: oasys@123

Create repository name

ex:oasys2022/voice_to_text

Then tag your image to docker hub 

docker tag imagename oasys2022/voice_to_text:first   ==>first is a tag name 

Then push your image in docker hub

docker push  oasys2022/voice_to_text:first

pull your docker and run

docker pull  oasys2022/voice_to_text:first

docker run -p 8000:8000 be80889572bc(image id)

 

Reduce_size docker image:

referense link:

https://blog.devgenius.io/building-smaller-docker-images-the-right-way-1b6c12c112e1 

 

first your create new file in pycharm.

file name is  Dockerfile.alpine-multi-stage

 


FROM python:3-alpine as builder 

ENV PATH="/opt/venv/bin:${PATH}"
COPY req.txt  /u01/req.txt
RUN \
  apk add build-base && \
  python -m venv /opt/venv && \
  pip install -r /u01/req.txt

FROM python:3-alpine
COPY .  /u01
COPY --from=builder /opt/venv /opt/venv
ENV PATH="/opt/venv/bin:${PATH}"
EXPOSE 8080
WORKDIR /u01
ENTRYPOINT [ "gunicorn", "--bind", "0.0.0.0:8080", "wsgi:app" ]
 

create new python file :grinning: 

file name is wsgi .py 

also  requirements.txt


from flask import Flask

app = Flask(__name__)
@app.route('/')
def basic_route():
  return 'welcome to docker';

if __name__ == '__main__':
  app.run()
Build the docker image:

sudo docker build -t ddirect:alpine-multi-stage -f Dockerfile.alpine.multi-stage  . --no-cache

Run the docker image :

sudo docker run -p 8080:8080 76db01515bbf # image id


Tag the image into dockerhub :

sudo docker tag imagename oasys2022/voice_to_text:Reduce

push the image in docker hub:

docker push  oasys2022/voice_to_text:reduce

Pull the image into local:

docker pull  oasys2022/voice_to_text:reduc

Run the docker image:

sudo docker run -p 8080:8080 24947ae8bbfc

Delete the all docker images

sudo docker system prune -a

 

 
